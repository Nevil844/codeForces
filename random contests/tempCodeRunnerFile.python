def count_fibonacci_like_sequences(n, k):
    MOD = 10**9 + 7
    
    # Initialize the dp array to store the number of sequences of length i with the last element as n.
    dp = [0] * (k + 1)
    
    # Base cases
    dp[1] = 1
    dp[2] = 1
    
    for i in range(3, k + 1):
        dp[i] = (dp[i - 1] + dp[i - 2]) % MOD
    
    # The number of Fibonacci-like sequences of length k with the k-th element as n is dp[k].
    return dp[k]

# Read the number of test cases
t = int(input())

for _ in range(t):
    # Read n and k for each test case
    n, k = map(int, input().split())
    
    # Calculate and print the result for each test case
    result = count_fibonacci_like_sequences(n, k)
    print(result)
